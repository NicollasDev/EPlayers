#pragma checksum "C:\Users\NdL\Desktop\EPlayers\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "48d1cc399d22d163027e21e0e849175b724388a6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\NdL\Desktop\EPlayers\Views\_ViewImports.cshtml"
using EPlayers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\NdL\Desktop\EPlayers\Views\_ViewImports.cshtml"
using EPlayers.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"48d1cc399d22d163027e21e0e849175b724388a6", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1f4c08585efce53df75e4024f5152579e518bb5e", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Equipe", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn gradient"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\NdL\Desktop\EPlayers\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Início";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"banner\">\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "48d1cc399d22d163027e21e0e849175b724388a64153", async() => {
                WriteLiteral("INSCREVA-SE");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
        </div>

        <div class=""sobre"">
            <div class=""container"">
                <div>
                    <h1>Por que Lee Sin é tão popular? </h1>
                    <p> 
                     Você provavelmente já ouviu falar do inSec. É uma combinação em que um jogador de Lee Sin mergulha no time inimigo, usa um salto em sentinela e flash para chutar um campeão para seu próprio time para que ele seja rapidamente aniquilado. Esse tipo de combinação mantém os jogadores intrigados e gera jogadas chamativas em lutas de equipe, onde um chute pode decidir o resultado.

                     A maioria dos fãs de League já ouviu falar do inSec. Ele foi um dos primeiros jogadores de Lee Sin, que inventou o combo Q-salto de sentinela-flash-R. Lee Sin foi um dos primeiros campeões a cunhar um nome de combo. É conhecido até hoje, mesmo nascendo na terceira temporada do League.


             </p>
                </div>
            </div>
        </div>
        <img src=""Images/9a6e4f50b");
            WriteLiteral(@"0d94f75ce274348f06a6d56.png"" alt=""Imagem de um 
    campeão do lol"" class=""champion"">

        <section id=""horarios"">

            <div class=""container"">
                <div class=""ao_vivo"">
                    <h2>AO VIVO</h2>
                    <div class=""partida"">
                        <strong>SK</strong>
                        <img src=""Images/SK.png"" alt=""Logo da equipe SK"">
                        <I>VS</I>
                        <img src=""Images/FLA.png"" alt=""Logo da equipe do Flamengo"">
                        <strong>FLA</strong>
                    </div>
                </div>

                <div class=""em_breve"">
                    <h2>EM BREVE</h2>
                    <div class=""partida"">
                        <strong>PRG</strong>
                        <img src=""Images/prg.png"" alt=""Logo da equipe PRG"">
                        <I>VS</I>
                        <img src=""Images/VT.png"" alt=""Logo da equipe do Vitality"">
                        <strong>VT</st");
            WriteLiteral(@"rong>
                    </div>
                    <div class=""partida"">
                        <strong>VivoKeyd</strong>
                        <img src=""Images/vivokeyd.png"" alt=""Logo da equipe Vivo Keyd"">
                        <I>VS</I>
                        <img src=""Images/lions.png"" alt=""Logo da equipe do lions"">
                        <strong>Lions</strong>
                    </div>
                    <div class=""partida"">
                        <strong>Furia</strong>
                        <img src=""Images/furia.png"" alt=""Logo da equipe furia"">
                        <I>VS</I>
                        <img src=""Images/kabum.png"" alt=""Logo da equipe do kabum"">
                        <strong>KBM</strong>
                    </div>
                </div>
            </div>
        </section>

        <div class=""container content"">
            <section class=""noticias"">
                <div class=""card"">
                    <img src=""Images/Teams/T1.jpeg"" alt=""Notícia");
            WriteLiteral(@" sobra assunto 1"">
                    <div>
                        <h4>Júlia ""Mayumi"" fora da INTZ?</h4>
                        <p> Júlia ""Mayumi"" não é mais jogadora de League of Legends da INTZ. A suporte de 18 anos anunciou sua saída da organização e afirmou que irá focar em ""streams e projetos pessoais"", mas está livre para negociar com qualquer equipes.</p>
                    </div>
                </div>


                <div class=""card"">
                    <img src=""Images/Teams/T2.jpg"" alt=""Notícia sobra assunto 1"">
                    <div>
                        <h4>ESL LA League</h4>
                        <p> Os tubarões venceram por 3 a 1 no formato MD5. As partidas foram jogadas na Mirage (16 x 14), Inferno (16 x 14) , Cobblestone (4 x 16) e Cache (16 x 12). Além da vaga na ESL Pro League, a equipe também ganhou R$ 50 mil em prêmios.

                        </p>
                    </div>
                </div>

                <div class=""card"">
                    ");
            WriteLiteral(@"<img src=""Images/Teams/T3.jpeg"" alt=""Notícia sobra assunto 1"">
                    <div>
                        <h4>INTZ anuncia retorno do jogador Hauz para o CBLoL 2020</h4>
                        <p> TZ volta a contar com o atleta da rota do meio Bruno “Hauz” Ferreira para o primeiro split do CBLoL 2020.</p>
                    </div>
                </div>

                <div class=""card"">
                    <img src=""Images/Teams/T9.jpeg"" alt=""Notícia sobra assunto 1"">
                    <div>
                        <h4>Circuito Desafiante 2020: Redemption despenca e RED mantém a liderança</h4>
                        <p> O Circuito Desafiante de League of Legends teve mais uma rodada disputada nesta segunda-feira.</p>
                    </div>
                </div>

                <div class=""card"">
                    <img src=""Images/Teams/T5.jpeg"" alt=""Notícia sobra assunto 1"">
                    <div>
                        <h4>Uzi chegou perto de assinar com a IG para ");
            WriteLiteral(@"o 2° split da LPL</h4>
                        <p> É quase unanimidade que Uzi é o melhor ADC da história do LoL, e um dos jogadores mais lendários de toda a cena competitiva.  </p>
                    </div>
                </div>

                <div class=""card"">
                    <img src=""Images/Teams/T7.jpeg"" alt=""Notícia sobra assunto 1"">
                    <div>
                        <h4>CBLoL 2020: Flamengo perde para a PRG e Keyd vence a paiN</h4>
                        <p> Neste sábado (11) tivemos a 11° rodada do CBLoL 2020. A PRG continua a sua sequência de vitórias ao conseguir derrotar o Flamengo, que amarga a quarta derrota seguida.</p>
                    </div>
                </div>
            </section>
            <section class=""recentes"" id=""resultados"">
                <h3>PARTIDAS RECENTES</h3>

                <div class=""resultado"">
                    <div class=""team"">
                        <strong>SK</strong>
                        <img src=""Images/S");
            WriteLiteral(@"K.png"" alt=""Logo da equipe SK"">
                        <I>VS</I>
                        <img src=""Images/FLA.png"" alt=""Logo da equipe do Flamengo"">
                        <strong>FLA</strong>
                    </div>
                    <div class=""placar"">
                        <P>2 x 1</p>
                    </div>
                </div>
                <div class=""resultado"">
                    <div class=""team"">
                        <strong>VT</strong>
                        <img src=""Images/vt.png"" alt=""Logo da equipe VT"">
                        <I>VS</I>
                        <img src=""Images/vivokeyd.png"" alt=""Logo da equipe do vivokeyd"">
                        <strong>VK</strong>
                    </div>
                    <div class=""placar"">
                        <P>2 x 0</p>
                    </div>
                </div>
                <div class=""resultado"">
                    <div class=""team"">
                        <strong>Lions</strong>
     ");
            WriteLiteral(@"                   <img src=""Images/lions.png"" alt=""Logo da equipe Lions"">
                        <I>VS</I>
                        <img src=""Images/prg.png"" alt=""Logo da equipe do prg"">
                        <strong>prg</strong>
                    </div>
                    <div class=""placar"">
                        <P>0 x 2</p>
                    </div>
                </div>
                <div class=""resultado"">
                    <div class=""team"">
                        <strong>Cl9</strong>
                        <img src=""Images/cloud9.png"" alt=""Logo da equipe Cloud9"">
                        <I>VS</I>
                        <img src=""Images/FLA.png"" alt=""Logo da equipe do Flamengo"">
                        <strong>FLA</strong>
                    </div>
                    <div class=""placar"">
                        <P>2 x 1</p>
                    </div>
                </div>
                <div class=""resultado"">
                    <div class=""team"">
          ");
            WriteLiteral(@"              <strong>SK</strong>
                        <img src=""Images/SK.png"" alt=""Logo da equipe SK"">
                        <I>VS</I>
                        <img src=""Images/VT.png"" alt=""Logo da equipe do Vitality"">
                        <strong>VT</strong>
                    </div>
                    <div class=""placar"">
                        <P>2 x 1</p>
                    </div>
                </div>
                <div class=""resultado"">
                    <div class=""team"">
                        <strong>Kbm</strong>
                        <img src=""Images/kabum.png"" alt=""Logo da equipe Kabum"">
                        <I>VS</I>
                        <img src=""Images/vivokeyd.png"" alt=""Logo da equipe do vivokeyd"">
                        <strong>VK</strong>
                    </div>
                    <div class=""placar"">
                        <P>0 x 2</p>
                    </div>
                </div>
                <a href=""todos_os_resultados.html"" c");
            WriteLiteral("lass=\"btn gradient\">mais resultados</a>\r\n            </section>\r\n        </div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
